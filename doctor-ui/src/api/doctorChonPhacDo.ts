import axios from "axios";
import { BASE_URL } from "./BaseURL";
import type { patientPrescription, patientPrescriptionItems } from "@/types/prescription";


// ‚úÖ L·∫•y danh s√°ch ph√°c ƒë·ªì ARV
export const fetchARVProtocols = async () => {
  try {
    const res = await axios.get(`${BASE_URL}prescriptions`);
    const data = res.data?.data;

    if (!Array.isArray(data)) {
      console.error("‚ùå K·∫øt qu·∫£ prescriptions kh√¥ng h·ª£p l·ªá:", res.data);
      return [];
    }

    console.log("‚úÖ prescriptions data:", data);
    return data; // m·ªói item ƒë√£ l√† Prescription
  } catch (error) {
    console.error("‚ùå L·ªói khi fetch ph√°c ƒë·ªì:", error);
    return [];
  }
};

// ‚úÖ Ch·ªçn ph√°c ƒë·ªì ƒëi·ªÅu tr·ªã cho cu·ªôc h·∫πn
export const selectPrescription = async (
  appointmentId: number,
  prescriptionId: number
) => {
  try {
    const res = await axios.post(
      `${BASE_URL}appointments/${appointmentId}/prescription/${prescriptionId}`,
      "Ch·ªçn ph√°c ƒë·ªì ARV"
    );
    console.log("‚úÖ Ch·ªçn ph√°c ƒë·ªì th√†nh c√¥ng:", res.data);
    return res.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi ch·ªçn ph√°c ƒë·ªì ƒëi·ªÅu tr·ªã:", error);
    throw error;
  }
};

// ‚úÖ L·∫•y th√¥ng tin c·∫£nh b√°o (d·ªã ·ª©ng, b·ªánh k√®m)
export const fetchPatientAlerts = async (patientId: string) => {
  try {
    const res = await axios.get(`${BASE_URL}patients/${patientId}`);
    const result = res.data?.data;

    return {
      allergy: result?.allergy || "Kh√¥ng r√µ",
      comorbid: result?.comorbid || "Kh√¥ng r√µ",
    };
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin c·∫£nh b√°o:", error);
    return {
      allergy: "Kh√¥ng r√µ",
      comorbid: "Kh√¥ng r√µ",
    };
  }
};

// ‚úÖ L·∫•y CD4, VL, c√¢n n·∫∑ng, tu·ªïi,...
export const fetchPatientInfo = async (patientId: string) => {
  try {
    const res = await axios.get(`${BASE_URL}patients/${patientId}`);
    return res.data?.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin b·ªánh nh√¢n:", error);
    throw error;
  }
};
// ‚úÖ L·∫•y chi ti·∫øt appointment
export const fetchAppointmentDetail = async (appointmentId: number) => {
  const res = await axios.get(`${BASE_URL}appointments/${appointmentId}`);
  return res.data?.data;
};

// ‚úÖ C·∫≠p nh·∫≠t ph√°c ƒë·ªì

// export const updatePrescriptionItem = async (
// )=>{
//   try{
//     const res = await axios.post(
//     `${BASE_URL}prescriptions/patiens`,
//   )
//     console.log("‚úÖ C·∫≠p nh·∫≠t ph√°c ƒë·ªì th√†nh c√¥ng:", res.data);
//     return res.data;
//   }catch (error) {
//     console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t ph√°c ƒë·ªì:", error);
//     throw error;
//   }
// }
export const updatePrescriptionItem = async (
  appointmentId: number,
  prescriptionId: number,
  items: patientPrescriptionItems[],
  note: string 
) => {
  const patientPrescriptionItems = items.map((item) => ({
    dosage: item.dosage,
    frequency: item.frequency,
    quantity: Number(item.quantity) || 0,
    medicationId: item.medication.medicationId,
  }));

  const body = {
    duration: items[0]?.duration || "1 th√°ng",
    frequency: items[0]?.frequency || "1 l·∫ßn/ng√†y",
    quantity: items[0]?.quantity ? Number(items[0].quantity) : 0,
    prescriptionId,
    appointmentId,
    note, 
    patientPrescriptionItems,
  };

  const res = await axios.post(`${BASE_URL}prescriptions/patients`, body);
  console.log("üîç Body g·ª≠i l√™n server:", body);
  return res.data;
};


export const fetchPatientPrescription = async (
  appointmentId: number
): Promise<patientPrescription | null> => {
  try {
    const token = localStorage.getItem("accessToken");
    const res = await axios.get(`${BASE_URL}appointments/${appointmentId}`, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });
    return res.data?.data || null;
  } catch (err) {
    console.error("L·ªói khi l·∫•y ph√°c ƒë·ªì b·ªánh nh√¢n:", err);
    return null;
  }
};
export const getPatientDataByAppointmentId = async (
  appointmentId: number
): Promise<any> => {
  try {
    const token = localStorage.getItem("accessToken");
    const res = await axios.get(`${BASE_URL}appointments/${appointmentId}`, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });
    // Th√¥ng tin b·ªánh nh√¢n th∆∞·ªùng n·∫±m trong res.data.data.patient
    return res.data?.data?.patient || null;
  } catch (error) {
    console.error(
      "‚ùå L·ªói khi l·∫•y th√¥ng tin b·ªánh nh√¢n theo appointmentId:",
      error
    );
    return null;
  }
};
